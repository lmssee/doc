name: 打包构建

on:
  push:
    branches: '*'
  workflow_dispatch: # 手动触发
    inputs:
      ref:
        description: '推送分支名'
        required: false
        default: ''
        type: string
      platforms:
        description: '构建平台'
        required: true
        type: choice
        options:
          - 'com'
          - 'cn'
          - 'github'
          - 'comEarthnut'
          - 'cnEarthnut'
      commit_message:
        description: '发布到 github 时的 message'
        required: false
        default: '手动发布'
        type: string

jobs:
  build-and-deploy: # 构建并部署
    name: 打包构建
    runs-on: ubuntu-latest
    # 仅在 commit message 包含 "deploy" 时触发
    # contains: 检测提交的 commit message 是否包含指定字符串
    # github.event_name == 'push' && contains(github.event.head_commit.message, 'version')
    # startsWith: 检测提交的 commit message 是否以指定字符串开头
    # endsWith: 检测提交的 commit message 是否以指定字符串结尾
    # github.event_name == 'workflow_dispatch'
    if: |
      (github.event_name == 'push' && startsWith(github.event.head_commit.message, 'deploy')) || 
      (github.event_name == 'workflow_dispatch')

    steps:
      # 如果可能的话，我想这不是问题，问题是没有任何问题
      - name: 代码检出
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref_name }}
          fetch-depth: 1

      - name: 设定 Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: true
          cache-dependency-path: package-lock.json
          # 推送到 npm 包时配置
          # registry-url: https://registry.npmjs.org/

      - name: 安装依赖
        run: |
          npm install

      - name: 配置提交信息
        id: set-commit-message
        run: |
          if [ "${{ github.event_name }}"  == 'push' ]; then
            # echo "::set-output name=commit_message::$(git log -1 --pretty=%B)"
            echo "::set-output name=commit_message::${{ github.event.head_commit.message }}"
          else
            echo "::set-output name=commit_message::${{ github.event.inputs.commit_message }}"
          fi

      - name: 配置 SSH 密钥
        id: setup-ssh
        env:
          TENCENT_SSH_KEY: ${{ secrets.TENCENT_SSH_KEY }}
          TENCENT_HOST: ${{ secrets.TENCENT_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "${TENCENT_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $TENCENT_HOST >> ~/.ssh/known_hosts

      # 部署到腾讯云 com 环境
      - name: 部署到 lmssee.com
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' && contains(github.event.inputs.platforms, 'com')
        env:
          TARGET_DOMAIN: com
          REMOTE_HOST: ${{ secrets.TENCENT_HOST }}
          REMOTE_USER: ${{ secrets.TENCENT_USER }}
        run: |
          npx docusaurus clear
          npx docusaurus build
          ssh -i  ~/.ssh/id_rsa $REMOTE_USER@REMOTE_HOST "mkdir -p /home/$TARGET_DOMAIN"
          rsync -avz --delete build/ $REMOTE_USER@$REMOTE_HOST:/home/$TARGET_DOMAIN

      # 部署到腾讯云 comEarthnut 环境
      - name: 部署到 lmssee.com/earthnut
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' && contains(github.event.inputs.platforms, 'comEarthnut')
        env:
          TARGET_DOMAIN: comEarthnut
          REMOTE_HOST: ${{ secrets.TENCENT_HOST }}
          REMOTE_USER: ${{ secrets.TENCENT_USER }}
        run: |
          npx docusaurus clear
          npx docusaurus build
          ssh -i  ~/.ssh/id_rsa $REMOTE_USER@REMOTE_HOST "mkdir -p /home/$TARGET_DOMAIN"
          rsync -avz --delete build/ $REMOTE_USER@$REMOTE_HOST:/home/$TARGET_DOMAIN

        # 部署到腾讯云 cn 环境
      - name: 部署到 lmssee.cn/earthnut
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' && contains(github.event.inputs.platforms, 'cn')
        env:
          TARGET_DOMAIN: cn
          REMOTE_HOST: ${{ secrets.TENCENT_HOST }}
          REMOTE_USER: ${{ secrets.TENCENT_USER }}
        run: |
          npx docusaurus clear
          npx docusaurus build
          ssh -i  ~/.ssh/id_rsa $REMOTE_USER@REMOTE_HOST "mkdir -p /home/$TARGET_DOMAIN"
          rsync -avz --delete build/ $REMOTE_USER@$REMOTE_HOST:/home/$TARGET_DOMAIN

          # 部署到腾讯云 cnEarthnut 环境
      - name: 部署到 lmssee.cn/earthnut
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' && contains(github.event.inputs.platforms, 'cnEarthnut')
        env:
          TARGET_DOMAIN: cnEarthnut
          REMOTE_HOST: ${{ secrets.TENCENT_HOST }}
          REMOTE_USER: ${{ secrets.TENCENT_USER }}
        run: |
          npx docusaurus clear
          npx docusaurus build
          ssh -i  ~/.ssh/id_rsa $REMOTE_USER@REMOTE_HOST "mkdir -p /home/$TARGET_DOMAIN"
          rsync -avz --delete build/ $REMOTE_USER@$REMOTE_HOST:/home/$TARGET_DOMAIN

        # 部署到 lmssee.github.io
      - name: 部署到 lmssee.github.io
        env:
          TARGET_DOMAIN: lmssee
          TARGET_TOKEN: lmssee
          TARGET_REPO: lmssee/lmssee.github.io
          GITHUB_TOKEN: ${{ secrets.GH_LMSSEE_TOKEN }}
        run: |
          rm -rf build
          npx docusaurus clear
          npx docusaurus build
          cd build
          rm -rf .git
          git init
          git config user.name "lmssee"
          git config user.email "lmssee@outlook.com"
          git add .
          git commit -m "${{ steps.set-commit-message.outputs.commit_message  }}"
          git remote add origin "https://${GITHUB_TOKEN}@github.com/${TARGET_REPO}.git"
          git push origin HEAD:main --force

      - name: 部署到 earthnutDev.github.io
        env:
          TARGET_DOMAIN: earthnutDev
          TARGET_TOKEN: earthnutDev
          TARGET_REPO: earthnutDev/earthnutDev.github.io
          GITHUB_TOKEN: ${{ secrets.GH_EARTHNUT_TOKEN }}
        run: |
          rm -rf build
          npx docusaurus clear
          npx docusaurus build
          cd build
          rm -rf .git
          git init
          git config user.name "earthnutDev"
          git config user.email "earthnut.dev@outlook.com"
          git add .
          git commit -m "${{ steps.set-commit-message.outputs.commit_message  }}"
          git remote add origin "https://${GITHUB_TOKEN}@github.com/${TARGET_REPO}.git"
          git push origin HEAD:main --force
